; Script generated by the Inno Script Studio Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

;; https://github.com/DomGries/InnoDependencyInstaller
#define Dependency_NoExampleSetup
#include "CodeDependencies\CodeDependencies.iss"

#define ExeBinPath "..\Publish\"
#define MyAppName "Kaartfabriek"
#define MyAppPublisher "TopX Geo-ICT"
#define MyAppURL "https://topx-group.nl/"
#define MyAppExeName "Kaartfabriek.exe"
#define MyAppVersion GetVersionNumbersString(ExeBinPath + 'Kaartfabriek.exe')

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{E22358D1-1EBC-4D07-87C3-3A6B900B80E9}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={autopf}\{#MyAppName}
DefaultGroupName=Kaartfabriek
AllowNoIcons=yes
OutputDir=Output   
OutputBaseFilename=Kaartfabriek-v{#MyAppVersion}
SetupIconFile=D:\dev\TopX\Loonstra\Docs\Favicon\favicon.ico
Compression=lzma
SolidCompression=yes
CompressionThreads=2
LZMANumBlockThreads=2
PrivilegesRequired=none
ChangesEnvironment=no
ArchitecturesAllowed=x64
ArchitecturesInstallIn64BitMode=x64

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"
Name: "dutch"; MessagesFile: "compiler:Languages\Dutch.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked
Name: "quicklaunchicon"; Description: "{cm:CreateQuickLaunchIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked; OnlyBelowVersion: 0,6.1

[Files]
;Source: "D:\dev\TopX\Loonstra\Git\Publish\Kaartfabriek.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#ExeBinPath}\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "GDAL\*"; DestDir: "{app}\GDAL"; Flags: ignoreversion recursesubdirs createallsubdirs
;Source: "CodeDependencies\netcorecheck.exe"; DestDir: "{tmp}"; Flags: dontcopy noencryption deleteafterinstall ignoreversion
Source: "CodeDependencies\netcorecheck_x64.exe"; DestDir: "{tmp}"; Flags: dontcopy noencryption deleteafterinstall ignoreversion
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{group}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{commondesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon
Name: "{userappdata}\Microsoft\Internet Explorer\Quick Launch\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: quicklaunchicon

[Run]
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent

[Messages]
BeveledLabel={#MyAppPublisher}

[Registry]
Root: "HKCU"; Subkey: "Environment"; ValueType: string; ValueName: "PROJ_LIB"; ValueData: "{app}\GDAL\share\"; Flags: preservestringtype createvalueifdoesntexist uninsdeletevalue

[Code]
procedure InitializeWizard;
begin
  Dependency_InitializeWizard;
end;

function PrepareToInstall(var NeedsRestart: Boolean): String;
begin
  Result := Dependency_PrepareToInstall(NeedsRestart);
end;

function NeedRestart: Boolean;
begin
  Result := Dependency_NeedRestart;
end;

function UpdateReadyMemo(const Space, NewLine, MemoUserInfoInfo, MemoDirInfo, MemoTypeInfo, MemoComponentsInfo, MemoGroupInfo, MemoTasksInfo: String): String;
begin
  Result := Dependency_UpdateReadyMemo(Space, NewLine, MemoUserInfoInfo, MemoDirInfo, MemoTypeInfo, MemoComponentsInfo, MemoGroupInfo, MemoTasksInfo);
end;

function InitializeSetup: Boolean;
begin
  // add the dependencies you need
  Dependency_AddDotNet50Desktop;
  // ...
  Result := True;
end;    
